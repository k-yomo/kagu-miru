scalar Map
scalar Time

type Query {
    home: HomeResponse!
    search(input: SearchInput!): SearchResponse!
    getSimilarItems(input: GetSimilarItemsInput!): GetSimilarItemsResponse!
    getQuerySuggestions(query: String!): QuerySuggestionsResponse!
    getItem(id: ID!): Item!
    # getAllItemCategories return item categories in a hierarchical data structure
    # max depth is 4
    getAllItemCategories: [ItemCategory!]!
}

type Mutation {
    trackEvent(event: Event!): Boolean!
}

enum ErrorCode {
    NOT_FOUND
    INTERNAL
}

type PageInfo {
    page: Int!
    totalPage: Int!
    totalCount: Int!
}

type ItemCategory {
    id: ID!
    name: String!
    level: Int!
    parentId: ID
    imageUrl: String
    parent: ItemCategory
    children: [ItemCategory!]!
}

enum ItemStatus {
    ACTIVE
    INACTIVE
}

enum ItemSellingPlatform {
    RAKUTEN
    YAHOO_SHOPPING
    PAYPAY_MALL
}

type Item {
    id: ID!
    groupID: ID!
    name: String!
    description: String!
    status: ItemStatus!
    url: String!
    affiliateUrl: String!
    price: Int!
    imageUrls: [String!]!
    averageRating: Float!
    reviewCount: Int!
    categoryId: ID!
    colors: [ItemColor!]!
    platform: ItemSellingPlatform!

    sameGroupItems: [Item!]!
}

type ItemConnection {
    pageInfo: PageInfo!
    nodes: [Item!]!
}

enum FacetType {
    CATEGORY_IDS
    BRAND_NAMES
    COLORS
    METADATA
}

type FacetValue {
    id: ID!
    name: String!
    count: Int!
}

type Facet {
    title: String!
    facetType: FacetType!
    values: [FacetValue!]!
    totalCount: Int!
}

type MediaPostCategory {
    id: ID!
    names: [String!]!
}

type MediaPost {
    slug: ID!
    title: String!
    description: String!
    mainImageUrl: String!
    publishedAt: Time!
    categories: [MediaPostCategory!]!
}

type HomeComponentPayloadItems {
    title: String!
    items: [Item!]!
}

type HomeComponentPayloadItemGroups {
    title: String!
    payload: [HomeComponentPayloadItems!]!
}

type HomeComponentPayloadMediaPosts {
    title: String!
    posts: [MediaPost!]!
}

type HomeComponentPayloadCategories {
    title: String!
    categories: [ItemCategory!]!
}

union HomeComponentPayload =
    HomeComponentPayloadItems
    | HomeComponentPayloadItemGroups
    | HomeComponentPayloadCategories
    | HomeComponentPayloadMediaPosts

type HomeComponent {
    id: ID!
    payload: HomeComponentPayload!
}

type HomeResponse {
    components: [HomeComponent!]!
}

type SearchResponse {
    searchId: String!
    itemConnection: ItemConnection!
    facets: [Facet!]!
}

type GetSimilarItemsResponse {
    searchId: String!
    itemConnection: ItemConnection!
}

type QuerySuggestionsResponse {
    query: String!
    suggestedQueries: [String!]!
}

enum SearchSortType {
    BEST_MATCH
    PRICE_ASC
    PRICE_DESC
    REVIEW_COUNT
    RATING
}

input SearchInput {
    query: String!
    filter: SearchFilter!
    sortType: SearchSortType!
    page: Int
    pageSize: Int
}

input GetSimilarItemsInput {
    itemId: ID!
    page: Int
    pageSize: Int
}

enum ItemColor {
    WHITE
    YELLOW
    ORANGE
    PINK
    RED
    BEIGE
    SILVER
    GOLD
    GRAY
    PURPLE
    BROWN
    GREEN
    BLUE
    BLACK
    NAVY
    KHAKI
    WINE_RED
    TRANSPARENT
}

input AppliedMetadata {
    name: String!
    values: [String!]!
}

input SearchFilter {
    categoryIds: [ID!]!
    platforms: [ItemSellingPlatform!]!
    brandNames: [String!]!
    colors: [ItemColor!]!
    minPrice: Int
    maxPrice: Int
    minRating: Int
    metadata: [AppliedMetadata!]!
}

enum EventID {
    HOME
    SEARCH
    QUERY_SUGGESTIONS
    SIMILAR_ITEMS
}

enum Action {
    DISPLAY
    CLICK_ITEM
}

input Event {
    id: EventID!
    action: Action!
    createdAt: Time!

    # one of the action must be set depending on the event id and action
    params: Map!
}

enum SearchFrom {
    URL
    OPEN_SEARCH
    HOME
    SEARCH
    QUERY_SUGGESTION
    FILTER
    MEDIA
}

input SearchDisplayItemsActionParams {
    searchId: String!
    searchFrom: SearchFrom!
    searchInput: SearchInput!
    itemIds: [ID!]! # Must be ranking's descending order
}

input SearchClickItemActionParams {
    searchId: String!
    itemId: String!
}

input HomeClickItemActionParams {
    componentId: ID!
    itemId: String!
}

input QuerySuggestionsDisplayActionParams {
    query: String!
    suggestedQueries: [String!]! # Must be ranking's descending order
}

input SimilarItemsDisplayItemsActionParams {
    searchId: String!
    getSimilarItemsInput: GetSimilarItemsInput!
    itemIds: [ID!]! # Must be ranking's descending order
}
